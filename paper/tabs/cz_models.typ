#show figure: set block(breakable: true)
#figure( // start figure preamble
  caption: text([Czechia]),
  kind: "tinytable",
  supplement: "Table", // end figure preamble

block[ // start block

#let nhead = 2;
#let nrow = 52;
#let ncol = 9;

  #let style-array = ( 
    // tinytable cell style after
(pairs: ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19), (0, 20), (0, 21), (0, 22), (0, 23), (0, 24), (0, 25), (0, 26), (0, 27), (0, 28), (0, 29), (0, 30), (0, 31), (0, 32), (0, 33), (0, 34), (0, 35), (0, 36), (0, 37), (0, 38), (0, 39), (0, 40), (0, 41), (0, 42), (0, 43), (0, 44), (0, 45), (0, 46), (0, 47), (0, 48), (0, 49), (0, 50), (0, 51), (0, 52), (0, 53),), align: left, fontsize: 9pt),
(pairs: ((1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 14), (1, 15), (1, 16), (1, 17), (1, 18), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 43), (1, 44), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (1, 50), (1, 51), (1, 52), (1, 53), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15), (2, 16), (2, 17), (2, 18), (2, 19), (2, 20), (2, 21), (2, 22), (2, 23), (2, 24), (2, 25), (2, 26), (2, 27), (2, 28), (2, 29), (2, 30), (2, 31), (2, 32), (2, 33), (2, 34), (2, 35), (2, 36), (2, 37), (2, 38), (2, 39), (2, 40), (2, 41), (2, 42), (2, 43), (2, 44), (2, 45), (2, 46), (2, 47), (2, 48), (2, 49), (2, 50), (2, 51), (2, 52), (2, 53), (3, 0), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 9), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 16), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 27), (3, 28), (3, 29), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 37), (3, 38), (3, 39), (3, 40), (3, 41), (3, 42), (3, 43), (3, 44), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (3, 50), (3, 51), (3, 52), (3, 53), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 9), (4, 10), (4, 11), (4, 12), (4, 13), (4, 14), (4, 15), (4, 16), (4, 17), (4, 18), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24), (4, 25), (4, 26), (4, 27), (4, 28), (4, 29), (4, 30), (4, 31), (4, 32), (4, 33), (4, 34), (4, 35), (4, 36), (4, 37), (4, 38), (4, 39), (4, 40), (4, 41), (4, 42), (4, 43), (4, 44), (4, 45), (4, 46), (4, 47), (4, 48), (4, 49), (4, 50), (4, 51), (4, 52), (4, 53), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 11), (5, 12), (5, 13), (5, 14), (5, 15), (5, 16), (5, 17), (5, 18), (5, 19), (5, 20), (5, 21), (5, 22), (5, 23), (5, 24), (5, 25), (5, 26), (5, 27), (5, 28), (5, 29), (5, 30), (5, 31), (5, 32), (5, 33), (5, 34), (5, 35), (5, 36), (5, 37), (5, 38), (5, 39), (5, 40), (5, 41), (5, 42), (5, 43), (5, 44), (5, 45), (5, 46), (5, 47), (5, 48), (5, 49), (5, 50), (5, 51), (5, 52), (5, 53), (6, 0), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12), (6, 13), (6, 14), (6, 15), (6, 16), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 23), (6, 24), (6, 25), (6, 26), (6, 27), (6, 28), (6, 29), (6, 30), (6, 31), (6, 32), (6, 33), (6, 34), (6, 35), (6, 36), (6, 37), (6, 38), (6, 39), (6, 40), (6, 41), (6, 42), (6, 43), (6, 44), (6, 45), (6, 46), (6, 47), (6, 48), (6, 49), (6, 50), (6, 51), (6, 52), (6, 53), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (7, 9), (7, 10), (7, 11), (7, 12), (7, 13), (7, 14), (7, 15), (7, 16), (7, 17), (7, 18), (7, 19), (7, 20), (7, 21), (7, 22), (7, 23), (7, 24), (7, 25), (7, 26), (7, 27), (7, 28), (7, 29), (7, 30), (7, 31), (7, 32), (7, 33), (7, 34), (7, 35), (7, 36), (7, 37), (7, 38), (7, 39), (7, 40), (7, 41), (7, 42), (7, 43), (7, 44), (7, 45), (7, 46), (7, 47), (7, 48), (7, 49), (7, 50), (7, 51), (7, 52), (7, 53), (8, 0), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (8, 16), (8, 17), (8, 18), (8, 19), (8, 20), (8, 21), (8, 22), (8, 23), (8, 24), (8, 25), (8, 26), (8, 27), (8, 28), (8, 29), (8, 30), (8, 31), (8, 32), (8, 33), (8, 34), (8, 35), (8, 36), (8, 37), (8, 38), (8, 39), (8, 40), (8, 41), (8, 42), (8, 43), (8, 44), (8, 45), (8, 46), (8, 47), (8, 48), (8, 49), (8, 50), (8, 51), (8, 52), (8, 53),), align: center, fontsize: 9pt),
  )

  // tinytable align-default-array before
  #let align-default-array = ( left, left, left, left, left, left, left, left, left, ) // tinytable align-default-array here
  #show table.cell: it => {
    if style-array.len() == 0 {
      it 
    } else {
      let tmp = it
      for style in style-array {
        let m = style.pairs.find(k => k.at(0) == it.x and k.at(1) == it.y)
        if m != none {
          if ("fontsize" in style) { tmp = text(size: style.fontsize, tmp) }
          if ("color" in style) { tmp = text(fill: style.color, tmp) }
          if ("indent" in style) { tmp = pad(left: style.indent, tmp) }
          if ("underline" in style) { tmp = underline(tmp) }
          if ("italic" in style) { tmp = emph(tmp) }
          if ("bold" in style) { tmp = strong(tmp) }
          if ("mono" in style) { tmp = math.mono(tmp) }
          if ("strikeout" in style) { tmp = strike(tmp) }
        }
      }
      tmp
    }
  }

  #align(center, [

  #table( // tinytable table start
    column-gutter: 5pt,
    columns: (auto, auto, auto, auto, auto, auto, auto, auto, auto),
    stroke: none,
    align: (x, y) => {
      let sarray = style-array.filter(a => "align" in a)
      let sarray = sarray.filter(a => a.pairs.find(p => p.at(0) == x and p.at(1) == y) != none)
      if sarray.len() > 0 {
        sarray.last().align
      } else {
        left
      }
    },
    fill: (x, y) => {
      let sarray = style-array.filter(a => "background" in a)
      let sarray = sarray.filter(a => a.pairs.find(p => p.at(0) == x and p.at(1) == y) != none)
      if sarray.len() > 0 {
        sarray.last().background
      }
    },
 table.hline(y: 2, start: 0, end: 9, stroke: 0.05em + black),
 table.hline(y: 52, start: 0, end: 9, stroke: 0.05em + black),
 table.hline(y: 54, start: 0, end: 9, stroke: 0.1em + black),
 table.hline(y: 0, start: 0, end: 9, stroke: 0.1em + black),
    // tinytable lines before

    table.header(
      repeat: true,
[ ],table.cell(stroke: (bottom: .05em + black), colspan: 2, align: center)[Precarity],table.cell(stroke: (bottom: .05em + black), colspan: 2, align: center)[Unaffordability],table.cell(stroke: (bottom: .05em + black), colspan: 2, align: center)[Insecurity],table.cell(stroke: (bottom: .05em + black), colspan: 2, align: center)[Low quality],
[ ], [(1)], [(2)], [(3)], [(4)], [(5)], [(6)], [(7)], [(8)],
    ),

    // tinytable cell content after
[Age (ref. 26\-64)], [], [], [], [], [], [], [], [],
[Below 25], [0.54\*], [0.54\*], [0.92\*\*], [0.91\*\*], [0.74\*], [0.77\*], [0.41\+], [0.40\+],
[], [(0.26)], [(0.26)], [(0.29)], [(0.29)], [(0.36)], [(0.36)], [(0.24)], [(0.24)],
[Above 65], [\-0.31\*], [\-0.31\*], [\-0.15], [\-0.14], [\-0.12], [\-0.11], [\-0.24], [\-0.24],
[], [(0.15)], [(0.15)], [(0.20)], [(0.20)], [(0.50)], [(0.50)], [(0.16)], [(0.16)],
[Household head economic status (ref. employed)], [], [], [], [], [], [], [], [],
[Retired], [\-0.00], [\-0.01], [\-0.07], [\-0.07], [\-0.70], [\-0.69], [\-0.04], [\-0.04],
[], [(0.15)], [(0.15)], [(0.21)], [(0.21)], [(0.51)], [(0.51)], [(0.17)], [(0.17)],
[Other], [0.67\*\*\*], [0.67\*\*\*], [0.77\*\*\*], [0.78\*\*\*], [1.17\*\*\*], [1.18\*\*\*], [0.43\*\*\*], [0.42\*\*\*],
[], [(0.13)], [(0.13)], [(0.15)], [(0.15)], [(0.21)], [(0.21)], [(0.13)], [(0.13)],
[Tenure status (ref. owner without mortgage)], [], [], [], [], [], [], [], [],
[Owner with mortgage], [0.11], [0.11], [0.62\*\*\*], [0.59\*\*], [0.83\*\*], [0.82\*\*], [\-0.17], [\-0.16],
[], [(0.10)], [(0.10)], [(0.18)], [(0.18)], [(0.29)], [(0.29)], [(0.11)], [(0.11)],
[Tenant, market rent], [1.50\*\*\*], [1.50\*\*\*], [2.11\*\*\*], [2.12\*\*\*], [1.40\*\*\*], [1.41\*\*\*], [0.84\*\*\*], [0.84\*\*\*],
[], [(0.08)], [(0.08)], [(0.11)], [(0.11)], [(0.22)], [(0.22)], [(0.08)], [(0.08)],
[Tenant, reduced rent], [1.52\*\*\*], [1.52\*\*\*], [0.12], [0.12], [0.08], [0.08], [1.86\*\*\*], [1.86\*\*\*],
[], [(0.26)], [(0.26)], [(0.30)], [(0.30)], [(0.76)], [(0.76)], [(0.24)], [(0.24)],
[Tenant, rent free], [\-0.32\*\*], [\-0.33\*\*], [\-0.64\*\*\*], [\-0.65\*\*\*], [\-0.27], [\-0.27], [0.08], [0.08],
[], [(0.11)], [(0.11)], [(0.14)], [(0.14)], [(0.44)], [(0.44)], [(0.13)], [(0.13)],
[Household type (ref. adults without children)], [], [], [], [], [], [], [], [],
[Adults with children], [0.76\*\*\*], [0.76\*\*\*], [\-0.47\*\*], [\-0.48\*\*], [\-0.00], [\-0.00], [1.09\*\*\*], [1.09\*\*\*],
[], [(0.09)], [(0.09)], [(0.17)], [(0.17)], [(0.25)], [(0.25)], [(0.10)], [(0.10)],
[Lone parent with children], [1.08\*\*\*], [1.08\*\*\*], [1.03\*\*\*], [1.03\*\*\*], [0.11], [0.11], [0.86\*\*\*], [0.86\*\*\*],
[], [(0.17)], [(0.17)], [(0.20)], [(0.20)], [(0.32)], [(0.32)], [(0.16)], [(0.16)],
[Lone adult], [0.75\*\*\*], [0.75\*\*\*], [1.39\*\*\*], [1.40\*\*\*], [0.05], [0.06], [0.17\*], [0.17\*],
[], [(0.07)], [(0.07)], [(0.11)], [(0.11)], [(0.22)], [(0.22)], [(0.08)], [(0.08)],
[Houshold equalised income (ref. 1st quantile)], [], [], [], [], [], [], [], [],
[2nd quantile], [\-0.86\*\*\*], [\-0.86\*\*\*], [\-1.22\*\*\*], [\-1.23\*\*\*], [\-0.61\*\*], [\-0.60\*\*], [\-0.35\*\*\*], [\-0.35\*\*\*],
[], [(0.08)], [(0.08)], [(0.10)], [(0.10)], [(0.21)], [(0.21)], [(0.09)], [(0.09)],
[3rd quantile], [\-1.42\*\*\*], [\-1.42\*\*\*], [\-2.09\*\*\*], [\-2.09\*\*\*], [\-0.70\*\*], [\-0.69\*\*], [\-0.73\*\*\*], [\-0.73\*\*\*],
[], [(0.09)], [(0.09)], [(0.13)], [(0.14)], [(0.24)], [(0.24)], [(0.10)], [(0.10)],
[4th quantile], [\-1.88\*\*\*], [\-1.88\*\*\*], [\-2.78\*\*\*], [\-2.80\*\*\*], [\-1.71\*\*\*], [\-1.71\*\*\*], [\-1.05\*\*\*], [\-1.04\*\*\*],
[], [(0.11)], [(0.11)], [(0.17)], [(0.17)], [(0.33)], [(0.33)], [(0.11)], [(0.11)],
[5th quantile (highest)], [\-2.33\*\*\*], [\-2.33\*\*\*], [\-3.66\*\*\*], [\-3.68\*\*\*], [\-3.07\*\*\*], [\-3.07\*\*\*], [\-1.40\*\*\*], [\-1.40\*\*\*],
[], [(0.12)], [(0.12)], [(0.25)], [(0.25)], [(0.61)], [(0.61)], [(0.13)], [(0.13)],
[Dwelling type (ref. detached house)], [], [], [], [], [], [], [], [],
[Semi\-detached house], [0.19\+], [0.19\+], [0.07], [0.06], [0.44], [0.45], [0.17], [0.17],
[], [(0.11)], [(0.11)], [(0.15)], [(0.15)], [(0.32)], [(0.32)], [(0.13)], [(0.13)],
[Appartment\/flat], [0.10], [0.11], [\-0.78\*\*\*], [\-0.75\*\*\*], [0.34], [0.36], [0.55\*\*\*], [0.53\*\*\*],
[], [(0.08)], [(0.08)], [(0.11)], [(0.11)], [(0.26)], [(0.26)], [(0.09)], [(0.09)],
[Urbanisation (ref. cities or towns)], [], [], [], [], [], [], [], [],
[Rural areas], [\-0.32\*\*\*], [\-0.32\*\*\*], [\-0.51\*\*\*], [\-0.52\*\*\*], [0.45\*], [0.45\*], [\-0.20\*], [\-0.20\*],
[], [(0.07)], [(0.07)], [(0.09)], [(0.09)], [(0.19)], [(0.19)], [(0.08)], [(0.08)],
[Renovation in past 5 years (ref. did not renovate)], [], [], [], [], [], [], [], [],
[Renovated in the past 5 years], [], [0.06], [], [0.34\*\*\*], [], [0.19], [], [\-0.15\+],
[], [], [(0.07)], [], [(0.10)], [], [(0.21)], [], [(0.08)],
[Don't know], [], [0.86], [], [1.84], [], [\-12.38], [], [0.83],
[], [], [(1.33)], [], [(1.52)], [], [(399.13)], [], [(1.06)],
[Intercept], [\-0.61\*\*\*], [\-0.62\*\*\*], [\-1.23\*\*\*], [\-1.31\*\*\*], [\-4.00\*\*\*], [\-4.07\*\*\*], [\-1.77\*\*\*], [\-1.73\*\*\*],
[], [(0.12)], [(0.12)], [(0.17)], [(0.17)], [(0.35)], [(0.35)], [(0.14)], [(0.14)],
[Pseudo\-R2], [0.22], [0.22], [0.34], [0.34], [0.19], [0.19], [0.13], [0.13],
[Num.Obs.], [8459], [8459], [8459], [8459], [8459], [8459], [8459], [8459],

    // tinytable footer after

    table.footer(
      repeat: false,
      // tinytable notes after
    table.cell(align: left, colspan: 9, text([\+ p \< 0.1, \* p \< 0.05, \*\* p \< 0.01, \*\*\* p \< 0.001])),
    ),
    

  ) // end table

  ]) // end align

] // end block
) // end figure
